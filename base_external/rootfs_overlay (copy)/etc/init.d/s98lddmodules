#!/bin/sh

# From example code

# $Id: scull_load,v 1.4 2004/11/03 06:19:49 rubini Exp $


# Group: since distributions do it differently, look for wheel or use staff
if grep -q '^staff:' /etc/group; then
    group="staff"
else
    group="wheel"
fi

case "$1" in
    start)
        echo "Starting scull"
        module="scull"
        device="scull"
        mode="664"

        # invoke insmod with all arguments we got
        # and use a pathname, as insmod doesn't look in . by default
        insmod /lib/modules/5.15.18/extra/scull.ko || exit 1

        # retrieve major number
        major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)

        # Remove stale nodes and replace them, then give gid and perms
        # Usually the script is shorter, it's scull that has several devices in it.

        rm -f /dev/scull[0-3]
        mknod /dev/scull0 c $major 0
        mknod /dev/scull1 c $major 1
        mknod /dev/scull2 c $major 2
        mknod /dev/scull3 c $major 3
        ln -sf scull0 /dev/scull
        chgrp $group /dev/scull[0-3] 
        chmod $mode  /dev/scull[0-3]

        rm -f /dev/scullpipe[0-3]
        mknod /dev/scullpipe0 c $major 4
        mknod /dev/scullpipe1 c $major 5
        mknod /dev/scullpipe2 c $major 6
        mknod /dev/scullpipe3 c $major 7
        ln -sf scullpipe0 /dev/scullpipe
        chgrp $group /dev/scullpipe[0-3] 
        chmod $mode  /dev/scullpipe[0-3]

        rm -f /dev/scullsingle
        mknod /dev/scullsingle  c $major 8
        chgrp $group /dev/scullsingle
        chmod $mode  /dev/scullsingle

        rm -f /dev/sculluid
        mknod /dev/sculluid   c $major 9
        chgrp $group /dev/sculluid
        chmod $mode  /dev/sculluid

        rm -f /dev/scullwuid
        mknod /dev/scullwuid  c $major 10
        chgrp $group /dev/scullwuid
        chmod $mode  /dev/scullwuid

        rm -f /dev/scullpriv
        mknod /dev/scullpriv  c $major 11
        chgrp $group /dev/scullpriv
        chmod $mode  /dev/scullpriv
        
        # now loading module hello
        module="hello"
        # Use the same name for the device as the name used for the module
        device="hello"

        set -e

        echo "Load our module, exit on failure"
        insmod /lib/modules/5.15.18/extra/hello.ko || exit 1
        echo "Get the major number (allocated with allocate_chrdev_region) from /proc/devices"
        major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)
        if [ ! -z ${major} ]; then
            echo "Remove any existing /dev node for /dev/hello"
            rm -f /dev/hello
            echo "Add a node for our device at /dev/hello using mknod"
            mknod /dev/hello c $major 0
            echo "Change group owner to ${group}"
            chgrp $group /dev/hello
            echo "Change access mode to ${mode}"
            chmod $mode  /dev/hello
        else
            echo "No device found in /proc/devices for driver ${module} (this driver may not allocate a device)"
        fi

        # now loading module faulty
        module="faulty"
        # Use the same name for the device as the name used for the module
        device="faulty"

        set -e

        echo "Load our module, exit on failure"
        insmod /lib/modules/5.15.18/extra/faulty.ko || exit 1
        echo "Get the major number (allocated with allocate_chrdev_region) from /proc/devices"
        major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)
        if [ ! -z ${major} ]; then
            echo "Remove any existing /dev node for /dev/faulty"
            rm -f /dev/faulty
            echo "Add a node for our device at /dev/faulty using mknod"
            mknod /dev/faulty c $major 0
            echo "Change group owner to ${group}"
            chgrp $group /dev/faulty
            echo "Change access mode to ${mode}"
            chmod $mode  /dev/faulty
        else
            echo "No device found in /proc/devices for driver ${module} (this driver may not allocate a device)"
        fi

        ;;
    
    stop)
        echo "Stopping scull"
        module="scull"
        device="scull"
        mode="664"
        
        # invoke rmmod with all arguments we got
        rmmod $module $* || exit 1

        # Remove stale nodes

        rm -f /dev/scull /dev/scull[0-3] 
        rm -f /dev/scullpriv
        rm -f /dev/scullpipe /dev/scullpipe[0-3]
        rm -f /dev/scullsingle
        rm -f /dev/sculluid
        rm -f /dev/scullwuid


        # now stopping hello
        module="hello"
        device="hello"
        # invoke rmmod with all arguments we got
        rmmod $module || exit 1

        # Remove stale nodes

        rm -f /dev/hello

        # now stopping faulty
        module="faulty"
        device="faulty"
        # invoke rmmod with all arguments we got
        rmmod $module || exit 1

        # Remove stale nodes

        rm -f /dev/faulty


        ;;
    *)
        echo "Usage: $0 {start|stop}"
    exit 1
esac

